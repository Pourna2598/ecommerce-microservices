classDiagram
    class PaymentService {
        +processPayment(paymentData)
        +getPaymentById(id)
        +getPaymentByOrderId(orderId)
        +updatePaymentStatus(id, status)
        +refundPayment(id)
        +getPaymentHistory(userId)
        +getPaymentStats()
        +getAllPayments(filters)
    }

    class Payment {
        +String id
        +String orderId
        +String userId
        +Float amount
        +String paymentMethod
        +String status
        +String transactionId
        +Object cardDetails
        +String refundId
        +Date refundedAt
        +String errorMessage
        +Date createdAt
        +Date updatedAt
    }

    class PaymentRepository {
        +findById(id)
        +findByOrderId(orderId)
        +findByUserId(userId)
        +findAll(filters)
        +save(payment)
        +update(id, data)
        +getStats()
    }

    class PaymentProcessor {
        +processPayment(amount, method, details)
        +processRefund(paymentId, amount)
        +validateCard(cardDetails)
        +getCardType(cardNumber)
        +simulatePaymentResponse(method, details)
    }

    class EventPublisher {
        +publishPaymentSuccess(payment)
        +publishPaymentFailed(payment)
        +publishRefundProcessed(payment)
    }

    PaymentService --> PaymentRepository
    PaymentService --> PaymentProcessor
    PaymentService --> EventPublisher
    PaymentRepository --> Payment
    PaymentProcessor --> Payment
    EventPublisher --> Payment 